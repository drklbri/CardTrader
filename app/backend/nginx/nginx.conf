events {
    worker_connections 1024;
}

http {

    include       mime.types;  # Включаем стандартные MIME-типы
    default_type  application/octet-stream;

    types {
        text/css css;          # Определяем MIME-тип для CSS
        text/javascript js;    # Определяем MIME-тип для JavaScript
    }

    server {
        listen 80;
        server_name card-trader.online;

        # Перенаправление всех HTTP-запросов на HTTPS
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name card-trader.online;

        ssl_certificate /etc/letsencrypt/live/card-trader.online/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/card-trader.online/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # Локация для MinIO
        location /minio/ {
            proxy_pass http://minio:9000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
            proxy_buffering off;
            proxy_set_header X-Forwarded-Host $host;
        }

        # Локация для статических файлов фронтенда
        location /static/ {
            alias /home/project/static/;  # Убедитесь, что это правильный путь
            expires 30d;  # Кеширование на 30 дней
            add_header Cache-Control "public";
        }

        # Локация для фронтенда
        location / {
            root /home/project/templates;  # Убедитесь, что это путь к папке с index.html
            index index.html;  # Главный файл вашего фронтенда
            try_files $uri $uri/ /index.html;  # Если файл не найден, возвращаем index.html
        }

        # Явная локация для API бэкенда
        location /api/ {
            proxy_pass http://web:80;  # URL вашего бэкенда
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
            proxy_buffering off;

            # CORS настройки
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, DELETE, PUT";
            add_header Access-Control-Allow-Headers "x-csrftoken, Content-Type, Authorization";

            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, DELETE, PUT";
                add_header Access-Control-Allow-Headers "x-csrftoken, Content-Type, Authorization";
                return 204;  # Возвращаем 204 No Content для OPTIONS-запросов
            }
        }
    }
}